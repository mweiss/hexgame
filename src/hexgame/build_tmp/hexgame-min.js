var HEX_BUFFER=((1-Math.sin(Math.PI/3))/2);var REGULAR_HEX_PATH=[0,Math.sin(Math.PI/3)/2+HEX_BUFFER,0.25,HEX_BUFFER,0.75,HEX_BUFFER,1,Math.sin(Math.PI/3)/2+HEX_BUFFER,0.75,Math.sin(Math.PI/3)+HEX_BUFFER,0.25,Math.sin(Math.PI/3)+HEX_BUFFER];var HexDrawUtils=function(){};HexDrawUtils.prototype={createShape:function(E,D){var C;var B;for(C=0;C<D.length;C+=2){var A=D[C];var G=D[C+1];if(C===0){B="M "+A+" "+G;}B+=" L "+A+" "+G;}B+=" z";var F=E.path(B);return F;},transform:function(D,E,F){var B=D.slice(0);var C;var A=0,G=0;if(F){A+=F[0];G+=F[1];}for(C=0;C<B.length;C+=2){B[C]=(B[C]*E)+A;B[C+1]=(B[C+1]*E)+G;}return B;},drawHex:function(E){var C=E.canvas,H=E.x,F=E.y,A=E.scale,D=E.offsetX,B=E.offsetY;var I=D+(((H*1.5)+(0.75*Math.abs(F%2)))*A);var G=B+((Math.sin(Math.PI/3)*0.5*F)*A);return this.createShape(C,this.transform(REGULAR_HEX_PATH,A,[I,G]));}};Y.HexDrawUtils=new HexDrawUtils();var HexGamePiece=Y.Base.create("hexgamepiece",Y.Base,[],{initializer:function(){this.resources=Y.Intl.get("hexgame");},destructor:function(){},render:function(){var B=this.get("piece");var A=[];Y.Array.each(B.get("cells"),function(C){var D=Y.HexDrawUtils.drawHex({x:C[0],y:C[1],canvas:this.get("canvas"),scale:this.get("scale"),offsetX:this.get("offsetX"),offsetY:this.get("offsetY")});A.push(D);},this);this._set("shapes",A);},rotate:function(B,A,C){Y.Array.each(this.get("shapes"),function(D){if(B!==0){D.rotate(B,A,C);}});}},{ATTRS:{scale:{value:30},canvas:{writeOnce:true},offsetX:{},offsetY:{},piece:{},shapes:{readOnly:true}}});Y.HexGamePiece=HexGamePiece;var NUM_PIECES_IN_ROW=9;var HexGame=Y.Base.create("hexgame",Y.Widget,[],{initializer:function(){this.resources=Y.Intl.get("hexgame");},destructor:function(){},renderUI:function(){var A=this;Y.Raphael({type:"raw"}).use([],function(B){A._initializeCanvas(B);A._renderHexBoardUI();A._renderHexPiecesUI();A._renderHexPlayerStageUI();});},_initializeCanvas:function(A){if(!this.get("canvas")){var C=this.get("contentBox");var B=A(this.get("contentBox")._node,this.get("width"),this.get("height"));this._set("canvas",B);}},_renderHexBoardUI:function(){var F=this.get("boardOffsetX"),E=this.get("boardOffsetY");var C=this.get("model").get("board").get("cells");var B=this.get("canvas");var G=this.get("scale");var D,A,H;for(D=0;D<C.length;D+=2){A=C[D];H=C[D+1];Y.HexDrawUtils.drawHex({canvas:B,x:A,y:H,scale:G,offsetX:F,offsetY:E});}},_getBoardRect:function(){var A=this.get("model").get("board").get("cells");var B,F=0,D=0;for(B=0;B<A.length;B+=2){F=Math.max(A[B],F);D=Math.max(A[B+1],D);}var E=this.get("boardOffsetX");var C=this.get("boardOffsetY");var G=this.get("scale");return{x:E,y:C,width:G*1.5*(F+1),height:G*(D/2)};},_renderHexPiecesUI:function(){var D=this._getBoardRect(),E=this.get("boardOffsetX"),C=this.get("boardOffsetY"),A=this.get("canvas"),G=this.get("scale")/2,H=E+D.width/2,F=C/2,B=this.get("model").get("players");Y.Array.each(B,function(L,P){var M=L.get("pieces");var O=3*G,N=4*G;var J=H-(NUM_PIECES_IN_ROW/2)*O;var I=F-(M.length/NUM_PIECES_IN_ROW)*0.5*N;var K=60*P;Y.Array.each(M,function(S,R){var Q=J+(R%NUM_PIECES_IN_ROW)*O;var T=I+Math.floor(R/NUM_PIECES_IN_ROW)*N;var S=new Y.HexGamePiece({piece:S,canvas:A,scale:G,offsetX:Q,offsetY:T});S.render();S.rotate(K,H,C+(D.height/2));},this);});},_renderHexPlayerStageUI:function(){var A=this.get("playerStageX"),D=this.get("playerStageY"),B=this.get("canvas");var C=B.rect(A,D,300,200);},bindUI:function(){},syncUI:function(){}},{ATTRS:{scale:{value:30},canvas:{readOnly:true},width:{value:1200},height:{value:1000},boardOffsetX:{value:200},boardOffsetY:{value:200},playerStageX:{value:700},playerStageY:{value:700},model:{}}});Y.HexGame=HexGame;